## My first function creates a special object matrix that can use be used
## in the second function to calculate the inverse with data stored in a cache.

## My first function creates a special matrix object that be used in cacheSolve

makeCacheMatrix <- function(x = matrix()) {
	inv <- NULL
	set <- function(y){
	 x  <<- y
	inv <<- NULL
}
	get <- function()x
	setInverse <- function(solveMatrix) inv <<- solveMatrix
	getInverse <- function() inv
	list(set=set, get=get, setInverse=setInverse, getInverse=getInverse)
}

## My second function calculates the inverse of the special object matrix
## from function one or treieves the inverse from the cache if it has already
## been calculated.

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of 'x'
	inv <- x$getInverse()
	if(!is.null(inv)){
	message("getting cached data")
	return(inv)
	}
	mat <- x$get()
	inv <- solve(matrix, ...)
	x$setInverse(inv)
	inv
	

}
